{"version":3,"sources":["webpack:///path---2017-21-b23d03a1e1956d7e8b0b.js","webpack:///./.cache/json/2017-21.json"],"names":["webpackJsonp","512","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,WAAAC,OAAA,6BAAwDC,gBAAmBC,GAAA,+FAAAC,KAAA,60IAAg8IC,aAA+GL,MAAA,+CAAAM,KAAA,uBAAoFC,aAAgBC,KAAA","file":"path---2017-21-b23d03a1e1956d7e8b0b.js","sourcesContent":["webpackJsonp([9453947766693],{\n\n/***/ 512:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"React üéÑ\",\"author\":\"Michael Chan @chantastic\"}},\"markdownRemark\":{\"id\":\"/Users/chan/learnreact/react.holiday/src/pages/2017/21.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"measure\\\">\\n<h2>Welcome to the (H)OC</h2>\\n<p>I‚Äôm gonna level with you, I don‚Äôt know to explain higher-order components to you.\\nI work in analogies and there just isn‚Äôt one for HOCs.</p>\\n<p>HOCs are like bacon-wrapped dates, where bacon is functions and dates are components, and bacon harvests dates for the wrapped dates to shove inside themselv‚Ä¶</p>\\n<p><strong>WHAT DA?!</strong></p>\\n<p>Yeah, no good analogies. <a href=\\\"https://reactjs.org/docs/higher-order-components.html\\\">Read the docs</a>.</p>\\n<h2>The good news</h2>\\n<p>The good news is that most HOCs share a basic skeleton.</p>\\n<p>Using our language from <a href=\\\"/2017/20\\\">yesterday</a>,\\nhere‚Äôs a HOC named <code>withKnowledge</code>.</p>\\n<style>\\n  .short-code code { line-height: 1em }\\n</style>\\n<div class=\\\"short-code\\\">\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">withKnowledge</span><span class=\\\"token punctuation\\\">(</span>UnkowingComponent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">KnowingComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> knowledge<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Things I know\\\"</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>UnkowingComponent\\n          <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">}</span>\\n          knowledge<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>knowledge<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p><code>withKnowleding</code> wraps our <strong>knowing</strong> component in a function that takes an <strong>unknowing</strong> component as an argument and <strong>smooshes</strong> them together.</p>\\n<p>Bring your own ‚Äúknowledge‚Äù and you know everything you need to about HOCs.</p>\\n<h2>Why HOCs are hard to understand</h2>\\n<p>Like <a href=\\\"https://www.youtube.com/watch?v=T9C-H_UvbUg\\\">Chrismukkah</a>, it‚Äôs just too many things.</p>\\n<p>Components don‚Äôt have the same composition mechanics as functions.\\nSo, higher-order components are really high-order component factories.\\nNow that‚Äôs two concepts you‚Äôde have trouble explaining at a dinner party.\\nThese components are composed outside of <code>render</code>, so dev tools kinda shit the bed.\\nThe artifact is your component wrapped in another component with opaque internals.\\nAnd when they aren‚Äôt assigned to intermediate variables, you have to use <code>React.createElement</code> instead of JSX.</p>\\n<p>Too many things.</p>\\n<h2>Why though?</h2>\\n<p>Higher-order components are another way of <a href=\\\"/2017/18\\\">uncoupling</a> components.\\nMany popular libraries use them.</p>\\n</div>\\n<h2>Tinker with it</h2>\\n<p>Explore the code below.\\nI‚Äôve used the higher-order component pattern to <strong>uncouple</strong> <code>FetchPokemon</code> from <code>Pokemon</code>.\\nIt‚Äôs now <code>withPokemon()</code>.</p>\\n<p>Can you change it to use a <strong>render prop</strong>?\\nWhich do you prefer?</p>\\n</div>\\n<iframe src=\\\"https://codesandbox.io/embed/1q7mqxlqj3\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\",\"frontmatter\":{\"title\":\"Day 21: something I like to call Chrismukkah\",\"date\":\"December 21, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/21/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2017-21-b23d03a1e1956d7e8b0b.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"React üéÑ\",\"author\":\"Michael Chan @chantastic\"}},\"markdownRemark\":{\"id\":\"/Users/chan/learnreact/react.holiday/src/pages/2017/21.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"measure\\\">\\n<h2>Welcome to the (H)OC</h2>\\n<p>I‚Äôm gonna level with you, I don‚Äôt know to explain higher-order components to you.\\nI work in analogies and there just isn‚Äôt one for HOCs.</p>\\n<p>HOCs are like bacon-wrapped dates, where bacon is functions and dates are components, and bacon harvests dates for the wrapped dates to shove inside themselv‚Ä¶</p>\\n<p><strong>WHAT DA?!</strong></p>\\n<p>Yeah, no good analogies. <a href=\\\"https://reactjs.org/docs/higher-order-components.html\\\">Read the docs</a>.</p>\\n<h2>The good news</h2>\\n<p>The good news is that most HOCs share a basic skeleton.</p>\\n<p>Using our language from <a href=\\\"/2017/20\\\">yesterday</a>,\\nhere‚Äôs a HOC named <code>withKnowledge</code>.</p>\\n<style>\\n  .short-code code { line-height: 1em }\\n</style>\\n<div class=\\\"short-code\\\">\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">withKnowledge</span><span class=\\\"token punctuation\\\">(</span>UnkowingComponent<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">KnowingComponent</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n    state <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span> knowledge<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Things I know\\\"</span> <span class=\\\"token punctuation\\\">}</span>\\n\\n    <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      <span class=\\\"token keyword\\\">return</span> <span class=\\\"token punctuation\\\">(</span>\\n        <span class=\\\"token operator\\\">&lt;</span>UnkowingComponent\\n          <span class=\\\"token punctuation\\\">{</span><span class=\\\"token operator\\\">...</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">}</span>\\n          knowledge<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>knowledge<span class=\\\"token punctuation\\\">}</span>\\n        <span class=\\\"token operator\\\">/</span><span class=\\\"token operator\\\">></span>\\n      <span class=\\\"token punctuation\\\">)</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p><code>withKnowleding</code> wraps our <strong>knowing</strong> component in a function that takes an <strong>unknowing</strong> component as an argument and <strong>smooshes</strong> them together.</p>\\n<p>Bring your own ‚Äúknowledge‚Äù and you know everything you need to about HOCs.</p>\\n<h2>Why HOCs are hard to understand</h2>\\n<p>Like <a href=\\\"https://www.youtube.com/watch?v=T9C-H_UvbUg\\\">Chrismukkah</a>, it‚Äôs just too many things.</p>\\n<p>Components don‚Äôt have the same composition mechanics as functions.\\nSo, higher-order components are really high-order component factories.\\nNow that‚Äôs two concepts you‚Äôde have trouble explaining at a dinner party.\\nThese components are composed outside of <code>render</code>, so dev tools kinda shit the bed.\\nThe artifact is your component wrapped in another component with opaque internals.\\nAnd when they aren‚Äôt assigned to intermediate variables, you have to use <code>React.createElement</code> instead of JSX.</p>\\n<p>Too many things.</p>\\n<h2>Why though?</h2>\\n<p>Higher-order components are another way of <a href=\\\"/2017/18\\\">uncoupling</a> components.\\nMany popular libraries use them.</p>\\n</div>\\n<h2>Tinker with it</h2>\\n<p>Explore the code below.\\nI‚Äôve used the higher-order component pattern to <strong>uncouple</strong> <code>FetchPokemon</code> from <code>Pokemon</code>.\\nIt‚Äôs now <code>withPokemon()</code>.</p>\\n<p>Can you change it to use a <strong>render prop</strong>?\\nWhich do you prefer?</p>\\n</div>\\n<iframe src=\\\"https://codesandbox.io/embed/1q7mqxlqj3\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\",\"frontmatter\":{\"title\":\"Day 21: something I like to call Chrismukkah\",\"date\":\"December 21, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/21/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2017-21.json\n// module id = 512\n// module chunks = 9453947766693"],"sourceRoot":""}