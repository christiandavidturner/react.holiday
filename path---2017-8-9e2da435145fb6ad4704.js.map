{"version":3,"sources":["webpack:///path---2017-8-9e2da435145fb6ad4704.js","webpack:///./.cache/json/2017-8.json"],"names":["webpackJsonp","526","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,WAAAC,OAAA,6BAAwDC,gBAAmBC,GAAA,8FAAAC,KAAA,ilHAAmsHC,aAA+GL,MAAA,8BAAAM,KAAA,uBAAmEC,aAAgBC,KAAA","file":"path---2017-8-9e2da435145fb6ad4704.js","sourcesContent":["webpackJsonp([141917721392422],{\n\n/***/ 526:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"React 🎄\",\"author\":\"Michael Chan @chantastic\"}},\"markdownRemark\":{\"id\":\"/Users/chan/learnreact/react.holiday/src/pages/2017/8.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"measure\\\">\\n<p>Managing state is hard.</p>\\n<p>I’ll take four days to cover the React APIs for setting state.<br>\\nSo don’t read today’s lesson without coming back for <a href=\\\"/2017/9\\\">set state dynamically</a> and <a href=\\\"/2017/10\\\">setState is a food truck</a>.</p>\\n<h2>setState is GrrrrREAT!</h2>\\n<p>Meet <a href=\\\"https://reactjs.org/docs/react-component.html#setstate\\\">setState()</a>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> someProp<span class=\\\"token punctuation\\\">:</span> newState <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p>This is a <a href=\\\"/2017/5\\\">special power</a> our components get by extending <code>React.Component</code>.<br>\\nWhen called, <code>setState</code> updates the local <code>state</code> object and re-renders the component.</p>\\n<h2>Set state statically</h2>\\n<p>Continue <a href=\\\"/2017/7\\\">yesterday’s</a> example and replace the <code>alert</code> with a proper state change.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">&lt;</span>button\\n  type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"button\\\"</span>\\n  onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> clapCount<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>clapCount<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">' '</span><span class=\\\"token punctuation\\\">}</span>👏\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<h2>Limitations</h2>\\n<p>Above, we call <code>setState()</code> with a new state object.</p>\\n<p>There are <a href=\\\"https://reactjs.org/docs/react-component.html#setstate\\\">two ways to use setState</a>.\\nThis one is easy to understand but quickly limiting.\\nWe set <code>clapCount</code> with a static value but how do we use a dynamic value?\\nHow do we keep our counter counting, transitioning current state to the next state?</p>\\n<p>Tomorrow we’ll learn how to transition state.</p>\\n<h2>Tinker with it</h2>\\n<p>Use the workspace below and set some state.</p>\\n<ul>\\n<li>Change value you set <code>clapCount</code> to. Get crazy; try a string.</li>\\n<li>Create another component that counts something else. 👍s, 🙌s, anything!</li>\\n<li>Keep the counter counting. Try your hand at making state changes dynamic.</li>\\n</ul>\\n</div>\\n<iframe src=\\\"https://codesandbox.io/embed/k58xm0vlyo\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\",\"frontmatter\":{\"title\":\"Day 8: Set state statically\",\"date\":\"December 08, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/8/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2017-8-9e2da435145fb6ad4704.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"React 🎄\",\"author\":\"Michael Chan @chantastic\"}},\"markdownRemark\":{\"id\":\"/Users/chan/learnreact/react.holiday/src/pages/2017/8.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"measure\\\">\\n<p>Managing state is hard.</p>\\n<p>I’ll take four days to cover the React APIs for setting state.<br>\\nSo don’t read today’s lesson without coming back for <a href=\\\"/2017/9\\\">set state dynamically</a> and <a href=\\\"/2017/10\\\">setState is a food truck</a>.</p>\\n<h2>setState is GrrrrREAT!</h2>\\n<p>Meet <a href=\\\"https://reactjs.org/docs/react-component.html#setstate\\\">setState()</a>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> someProp<span class=\\\"token punctuation\\\">:</span> newState <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p>This is a <a href=\\\"/2017/5\\\">special power</a> our components get by extending <code>React.Component</code>.<br>\\nWhen called, <code>setState</code> updates the local <code>state</code> object and re-renders the component.</p>\\n<h2>Set state statically</h2>\\n<p>Continue <a href=\\\"/2017/7\\\">yesterday’s</a> example and replace the <code>alert</code> with a proper state change.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token operator\\\">&lt;</span>button\\n  type<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"button\\\"</span>\\n  onClick<span class=\\\"token operator\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span>\\n    <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">setState</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> clapCount<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token number\\\">1</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token operator\\\">></span>\\n  <span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>clapCount<span class=\\\"token punctuation\\\">}</span>\\n  <span class=\\\"token punctuation\\\">{</span><span class=\\\"token string\\\">' '</span><span class=\\\"token punctuation\\\">}</span>👏\\n<span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">/</span>button<span class=\\\"token operator\\\">></span>\\n</code></pre>\\n      </div>\\n<h2>Limitations</h2>\\n<p>Above, we call <code>setState()</code> with a new state object.</p>\\n<p>There are <a href=\\\"https://reactjs.org/docs/react-component.html#setstate\\\">two ways to use setState</a>.\\nThis one is easy to understand but quickly limiting.\\nWe set <code>clapCount</code> with a static value but how do we use a dynamic value?\\nHow do we keep our counter counting, transitioning current state to the next state?</p>\\n<p>Tomorrow we’ll learn how to transition state.</p>\\n<h2>Tinker with it</h2>\\n<p>Use the workspace below and set some state.</p>\\n<ul>\\n<li>Change value you set <code>clapCount</code> to. Get crazy; try a string.</li>\\n<li>Create another component that counts something else. 👍s, 🙌s, anything!</li>\\n<li>Keep the counter counting. Try your hand at making state changes dynamic.</li>\\n</ul>\\n</div>\\n<iframe src=\\\"https://codesandbox.io/embed/k58xm0vlyo\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\",\"frontmatter\":{\"title\":\"Day 8: Set state statically\",\"date\":\"December 08, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/8/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2017-8.json\n// module id = 526\n// module chunks = 141917721392422"],"sourceRoot":""}