webpackJsonp([0xd9519ee9f47f],{490:function(t,e){t.exports={data:{site:{siteMetadata:{title:"React üéÑ",author:"Michael Chan @chantastic"}},markdownRemark:{id:"/Users/chan/learnreact/react.holiday/src/pages/2017/10.md absPath of file >>> MarkdownRemark",html:'<div class="measure">\n<p>When you set down with set state, you‚Äôre might think state is set immediately.</p>\n<p>It isn‚Äôt.</p>\n<div class="gatsby-highlight">\n      <pre class="language-js"><code><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">setState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> count<span class="token punctuation">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\nconsole<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>state<span class="token punctuation">.</span>count<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &lt;= Probably not what you expected</span>\n</code></pre>\n      </div>\n<h2>There‚Äôs a leak!</h2>\n<p><code>setState</code> has a naming problem.</p>\n<p>You‚Äôre right to think that <code>setState</code> sets state immediately.\nIt‚Äôs in the name.<br>\nBut only because it beats a more descriptive alternative like <code>enqueueStateTransition</code></p>\n<p>For a technical read of what‚Äôs going on, read the <a href="https://reactjs.org/docs/react-component.html#setstate">setState doc</a>.</p>\n<p>We‚Äôre gonna talk about hotdogs.</p>\n<h2>A fast-food mental model</h2>\n<p>Food trucks provide a great mental model for <code>setState</code>.\nHere are some attributes they share:</p>\n<h4>Asyncronous</h4>\n<p>Food trucks act <strong>asyncronously</strong>‚Äîa big word for <em>‚ÄúI move on while they make food.‚Äù</em></p>\n<p>I order.<br>\nI pay.<br>\nI step back and read twitter.<br>\nOther people order and pay.<br>\n5-10 minutes later someone hands me food.</p>\n<h4>Queued</h4>\n<p>Orders are <strong>queued</strong> but not a <a href="https://en.wikipedia.org/wiki/FIFO_(computing_and_electronics)">first-in, first-out queue</a>.<br>\nFood trucks need to be fast so they <strong>batch</strong> and <strong>prioritize</strong>.</p>\n<h4>Prioritized</h4>\n<p>You like hot fries? Me too.<br>\nSo when that fryer timer fires, fry orders get <strong>prioritized</strong>.</p>\n<p><em>(say that 5 times fast)</em></p>\n<h4>Batched</h4>\n<p>While I imagine a chef decisively considering exactly how much Tabouli to garnish my ‚ÄúLambda Lambda Lambda‚Äù with, it‚Äôs not how food trucks work.</p>\n<p>Scott wipes his sweaty brow, looks ahead, see 5 orders of <em>Lambda Lambda Lambda</em>, and they get <strong>batched</strong> for quick processing.</p>\n<h2>What does this have to do with anything?</h2>\n<p><code>setState</code> is a food truck.</p>\n<p>Orders get <strong>queued</strong>.<br>\nWork gets <strong>batched</strong> and <strong>prioritized</strong> for speed.<br>\nAnd it all happens <strong>asyncronously</strong>.  </p>\n<p>On the next render, you can pick-up your piping hot <em>Lambda Lambda Lambda and fries</em>.</p>\n<h2>Tinker with it</h2>\n<p>Use the workspace below and play around with the state-setting illustration.</p>\n</div>\n<iframe src="https://codesandbox.io/embed/53k015q03x" style="width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;" sandbox="allow-modals allow-forms allow-popups allow-scripts allow-same-origin"></iframe>',frontmatter:{title:"Day 10: setState is a food truck",date:"December 10, 2017"}}},pathContext:{slug:"/2017/10/"}}}});
//# sourceMappingURL=path---2017-10-6b31600dbcce5cbee419.js.map