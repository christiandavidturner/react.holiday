{"version":3,"sources":["webpack:///path---2017-22-086ced0d906cea48e6e6.js","webpack:///./.cache/json/2017-22.json"],"names":["webpackJsonp","516","module","exports","data","site","siteMetadata","title","author","markdownRemark","id","html","frontmatter","date","pathContext","slug"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,WAAAC,OAAA,6BAAwDC,gBAAmBC,GAAA,+FAAAC,KAAA,wlKAAixKC,aAA+GL,MAAA,6BAAAM,KAAA,uBAAkEC,aAAgBC,KAAA","file":"path---2017-22-086ced0d906cea48e6e6.js","sourcesContent":["webpackJsonp([95186594146768],{\n\n/***/ 516:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"React ðŸŽ„\",\"author\":\"Michael Chan @chantastic\"}},\"markdownRemark\":{\"id\":\"/Users/chan/learnreact/react.holiday/src/pages/2017/22.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"measure\\\">\\n<p>Our <code>withPokemon</code> HOC is mostly reusable. But it displays that static\\n<code>loading...</code> message.</p>\\n<p>Letâ€™s make that replaceable.</p>\\n<h2>Components over configuration</h2>\\n<p>The <code>defaultProps</code> API is one of my favorites. Use it to provide sensible\\ndefaults for your components.</p>\\n<p>For <code>withPokemon</code>, we should always indicate that the component is doing work.\\nBut we should make make the message configurable.</p>\\n<p>We know that props can be components. So lets put <code>&#x3C;div>loading...&#x3C;/div></code> in\\n<code>defaultProps</code>.</p>\\n<div class=\\\"short-code\\\">\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FetchPokemon</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span>\\n\\nFetchPokemon<span class=\\\"token punctuation\\\">.</span>defaultProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  renderLoading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p><em>(Yes, this works with component <a href=\\\"/2017/3\\\">functions</a> and <a href=\\\"/2017/5\\\">classes</a>\\nalike.)</em></p>\\n<p>Now we update <code>render()</code> and anyone on the team can use any loading component\\nthey want.</p>\\n<div class=\\\"short-code\\\">\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>character <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Component</span> <span class=\\\"token attr-name\\\">character</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>character<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>renderLoading\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n</div>\\n</div>\\n<h2>Future syntax</h2>\\n<p>CodeSandbox and\\n<a href=\\\"https://github.com/facebookincubator/create-react-app\\\">create-react-app</a>\\nprovide syntactic sugar for <code>defaultProps</code>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FetchPokemon</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">static</span> defaultProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    renderLoading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p>It reduces redundant typing but only for <a href=\\\"/2017/5\\\">class components</a>.</p>\\n<h2>Tinker with it</h2>\\n<p>Use the workspace below and explore <code>defaultProps</code>.</p>\\n<ul>\\n<li>Change <code>static defaultProps</code> to todayâ€™s syntax and back again.</li>\\n<li>Change <code>renderLoading</code> to use a <a href=\\\"/2017/18\\\">render prop</a>. What changes in\\n<code>render()</code>?</li>\\n<li>Create a new <a href=\\\"/2017/3\\\">functional component</a> named <code>Loading</code> and use it in\\n<code>defaultProps</code>. What changes in <code>render()</code>?</li>\\n</ul>\\n</div>\\n<iframe src=\\\"https://codesandbox.io/embed/r06lvnjjvo\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\",\"frontmatter\":{\"title\":\"Day 22: A sensible default\",\"date\":\"December 22, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/22/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---2017-22-086ced0d906cea48e6e6.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"React ðŸŽ„\",\"author\":\"Michael Chan @chantastic\"}},\"markdownRemark\":{\"id\":\"/Users/chan/learnreact/react.holiday/src/pages/2017/22.md absPath of file >>> MarkdownRemark\",\"html\":\"<div class=\\\"measure\\\">\\n<p>Our <code>withPokemon</code> HOC is mostly reusable. But it displays that static\\n<code>loading...</code> message.</p>\\n<p>Letâ€™s make that replaceable.</p>\\n<h2>Components over configuration</h2>\\n<p>The <code>defaultProps</code> API is one of my favorites. Use it to provide sensible\\ndefaults for your components.</p>\\n<p>For <code>withPokemon</code>, we should always indicate that the component is doing work.\\nBut we should make make the message configurable.</p>\\n<p>We know that props can be components. So lets put <code>&#x3C;div>loading...&#x3C;/div></code> in\\n<code>defaultProps</code>.</p>\\n<div class=\\\"short-code\\\">\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FetchPokemon</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span> <span class=\\\"token operator\\\">...</span> <span class=\\\"token punctuation\\\">}</span>\\n\\nFetchPokemon<span class=\\\"token punctuation\\\">.</span>defaultProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  renderLoading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p><em>(Yes, this works with component <a href=\\\"/2017/3\\\">functions</a> and <a href=\\\"/2017/5\\\">classes</a>\\nalike.)</em></p>\\n<p>Now we update <code>render()</code> and anyone on the team can use any loading component\\nthey want.</p>\\n<div class=\\\"short-code\\\">\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">return</span> <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>character <span class=\\\"token operator\\\">?</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>Component</span> <span class=\\\"token attr-name\\\">character</span><span class=\\\"token script language-javascript\\\"><span class=\\\"token punctuation\\\">=</span><span class=\\\"token punctuation\\\">{</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>state<span class=\\\"token punctuation\\\">.</span>character<span class=\\\"token punctuation\\\">}</span></span> <span class=\\\"token punctuation\\\">/></span></span>\\n<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token punctuation\\\">(</span>\\n  <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span>props<span class=\\\"token punctuation\\\">.</span>renderLoading\\n<span class=\\\"token punctuation\\\">)</span>\\n</code></pre>\\n      </div>\\n</div>\\n</div>\\n<h2>Future syntax</h2>\\n<p>CodeSandbox and\\n<a href=\\\"https://github.com/facebookincubator/create-react-app\\\">create-react-app</a>\\nprovide syntactic sugar for <code>defaultProps</code>.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-jsx\\\"><code><span class=\\\"token keyword\\\">class</span> <span class=\\\"token class-name\\\">FetchPokemon</span> <span class=\\\"token keyword\\\">extends</span> <span class=\\\"token class-name\\\">React<span class=\\\"token punctuation\\\">.</span>Component</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">static</span> defaultProps <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n    renderLoading<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;</span>div</span><span class=\\\"token punctuation\\\">></span></span>loading<span class=\\\"token operator\\\">...</span><span class=\\\"token tag\\\"><span class=\\\"token tag\\\"><span class=\\\"token punctuation\\\">&lt;/</span>div</span><span class=\\\"token punctuation\\\">></span></span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<br />\\n<p>It reduces redundant typing but only for <a href=\\\"/2017/5\\\">class components</a>.</p>\\n<h2>Tinker with it</h2>\\n<p>Use the workspace below and explore <code>defaultProps</code>.</p>\\n<ul>\\n<li>Change <code>static defaultProps</code> to todayâ€™s syntax and back again.</li>\\n<li>Change <code>renderLoading</code> to use a <a href=\\\"/2017/18\\\">render prop</a>. What changes in\\n<code>render()</code>?</li>\\n<li>Create a new <a href=\\\"/2017/3\\\">functional component</a> named <code>Loading</code> and use it in\\n<code>defaultProps</code>. What changes in <code>render()</code>?</li>\\n</ul>\\n</div>\\n<iframe src=\\\"https://codesandbox.io/embed/r06lvnjjvo\\\" style=\\\"width:100%; height:500px; border:0; border-radius: 4px; overflow:hidden;\\\" sandbox=\\\"allow-modals allow-forms allow-popups allow-scripts allow-same-origin\\\"></iframe>\",\"frontmatter\":{\"title\":\"Day 22: A sensible default\",\"date\":\"December 22, 2017\"}}},\"pathContext\":{\"slug\":\"/2017/22/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/2017-22.json\n// module id = 516\n// module chunks = 95186594146768"],"sourceRoot":""}