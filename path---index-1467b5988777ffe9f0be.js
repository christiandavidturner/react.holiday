webpackJsonp([0x81b8806e4260],{521:function(e,t){e.exports={data:{site:{siteMetadata:{title:"React 🎄"}},allMarkdownRemark:{edges:[{node:{excerpt:"Why? ¯ _ (ツ)_/¯ I like holidays.\nI like helping people.\nI think most React education is pathologically complicated. This is a condensed…",fields:{slug:"/about/"},frontmatter:{date:"01 December, 2017",title:"About"}}},{node:{excerpt:"In  C , programs have a  main()  function.\nIt’s where programs starts. React apps are similar; on the web they start with  ReactDOM.render…",fields:{slug:"/2017/1/"},frontmatter:{date:"01 December, 2017",title:"Day 1: Hello 🎄"}}},{node:{excerpt:"People like to make hay about  JSX . Don’t get your undies in a bunched. All it does is make these two lines equivalent: How does HTML work…",fields:{slug:"/2017/2/"},frontmatter:{date:"02 December, 2017",title:"Day 2: JSX 4 LYFE"}}},{node:{excerpt:"Components are just functions. 🤯 How do I write said component functions? Easy. Here’s one that spits out our  Hello 🎄  wherever used. How…",fields:{slug:"/2017/3/"},frontmatter:{date:"03 December, 2017",title:"Day 3: Components are functions"}}},{node:{excerpt:"If components are functions and functions take arguments,\ncomponents should take arguments. They do! In React we call component arguments…",fields:{slug:"/2017/4/"},frontmatter:{date:"04 December, 2017",title:"Day 4: Props are function arguments"}}},{node:{excerpt:"Some components have to be special.\nThose components get defined with  class . It’s not much to look at now.\nWe’ll fill it in this week…",fields:{slug:"/2017/5/"},frontmatter:{date:"05 December, 2017",title:"Day 5: Components can use classes for special powers"}}},{node:{excerpt:"Look at HTML.\nIt lets you handle DOM events inline. I could tell the sordid history that landed this in the “bad practice” bucket but we’d…",fields:{slug:"/2017/6/"},frontmatter:{date:"06 December, 2017",title:"Day 6: Events aren't events"}}},{node:{excerpt:"Being sexy is all about attitude… It’s a state of mind. — Amisha Patel One of the  special powers  of class components is their ability to…",fields:{slug:"/2017/7/"},frontmatter:{date:"07 December, 2017",title:"Day 7: State of mind"}}},{node:{excerpt:"Managing state is hard. I’ll take four days to cover the React APIs for setting state. So don’t read today’s lesson without coming back for…",fields:{slug:"/2017/8/"},frontmatter:{date:"08 December, 2017",title:"Day 8: Set state statically"}}},{node:{excerpt:"If you want to set state dynamically, use a  function . We give  setState  an anonymous function to be called with  state .\nOur function…",fields:{slug:"/2017/9/"},frontmatter:{date:"09 December, 2017",title:"Day 9: Set state dynamically"}}},{node:{excerpt:"When you set down with set state, you might think state is set immediately. It isn’t. There’s a leak! setState  has a naming problem. You’re…",fields:{slug:"/2017/10/"},frontmatter:{date:"10 December, 2017",title:"Day 10: setState is a food truck"}}},{node:{excerpt:"You can’t use  if/else  statements in `render. In those curly-braces, you can only use expressions.\nFortunately, you got a couple options…",fields:{slug:"/2017/11/"},frontmatter:{date:"11 December, 2017",title:"Day 11: Use expressions for conditional rendering"}}},{node:{excerpt:"Compose  means “smoosh things together.” You can  smoosh  🥛 and ☕️. You can  smoosh  a 🍔 with your 😋. You  smoosh  things all day; it’s…",fields:{slug:"/2017/12/"},frontmatter:{date:"12 December, 2017",title:"Day 12: Smoosh components"}}},{node:{excerpt:"Today, we start with a new component! 🎊 🎉 🎊 🎉 Pokemon Take a stab at writing this component\n in a new sandbox  before reading the next…",fields:{slug:"/2017/13/"},frontmatter:{date:"13 December, 2017",title:"Day 13: Gotta fetch 'em all"}}},{node:{excerpt:"99.7% of software development in one requirement A user should be able to view a list of items. —  @samccone Listen to Sam.\nLists make Apps…",fields:{slug:"/2017/14/"},frontmatter:{date:"14 December, 2017",title:"Day 14: Lists are 99.7% of the job"}}},{node:{excerpt:"Yesterday , you might have noticed this console warning pop up with our list. 👶 Give the  children  keys 🔑 Following the warning above is…",fields:{slug:"/2017/15/"},frontmatter:{date:"15 December, 2017",title:"Day 15: Key your children"}}},{node:{excerpt:"Today we’ll talk about things that  don’t  happen! First, a new component I’d like you to write a new component. You’ll  define this…",fields:{slug:"/2017/16/"},frontmatter:{date:"16 December, 2017",title:"Day 16: Mind the lifecycle gap"}}},{node:{excerpt:"Here is some lifecycle wisdom: Always use  Did  methods, unless you shouldn’t. Confused? Read on for more (confusion). Why  Did ? Did…",fields:{slug:"/2017/17/"},frontmatter:{date:"17 December, 2017",title:"Day 17: Always use `Did`, unless you shouldn't"}}},{node:{excerpt:"Gweneth got it right.\n Conscious Uncoupling  is a good (for components). Let’s explore a new  smooshing  technique that makes  PokemonPager…",fields:{slug:"/2017/18/"},frontmatter:{date:"18 December, 2017",title:"Day 18: Conscious uncoupling"}}},{node:{excerpt:"I know what my decision is, Which is not to decide. Indecision is the best tool you have for  smooshing  components together. Master it…",fields:{slug:"/2017/19/"},frontmatter:{date:"19 December, 2017",title:"Day 19: Decide not to decide"}}},{node:{excerpt:"Smart vs. Dumb components \nis a dichotomy that has dominated the React conversation as long as React has\nexisted. Here’s the nut:  Some…",fields:{slug:"/2017/20/"},frontmatter:{date:"20 December, 2017",title:"Day 20: Components: What do they know? Do they know things?? Let's Find out!"}}},{node:{excerpt:"Welcome to the (H)OC I’m gonna level with you, I don’t know to explain higher-order components to you.\nI work in analogies and there just…",fields:{slug:"/2017/21/"},frontmatter:{date:"21 December, 2017",title:"Day 21: something I like to call Chrismukkah"}}}]}},pathContext:{}}}});
//# sourceMappingURL=path---index-1467b5988777ffe9f0be.js.map